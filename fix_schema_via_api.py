#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã —á–µ—Ä–µ–∑ Supabase Management API
"""

import sys
import os
import requests
sys.path.append('src')

def get_supabase_credentials():
    """–ü–æ–ª—É—á–∞–µ—Ç credentials –¥–ª—è Supabase"""
    from src.app.settings import settings

    # –≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ settings.py –∏–ª–∏ .env
    project_url = getattr(settings, 'supabase_url', None)
    service_role_key = getattr(settings, 'supabase_service_role_key', None)

    if not project_url or not service_role_key:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã credentials –¥–ª—è Supabase Management API")
        print("–ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SUPABASE_URL –∏ SUPABASE_SERVICE_ROLE_KEY")
        return None, None

    return project_url, service_role_key

def execute_sql_via_api(sql_query):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç SQL —á–µ—Ä–µ–∑ REST API"""
    project_url, service_role_key = get_supabase_credentials()

    if not project_url or not service_role_key:
        return False

    # Supabase REST API endpoint –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL
    url = f"{project_url}/rest/v1/rpc/exec_sql"

    headers = {
        'Authorization': f'Bearer {service_role_key}',
        'Content-Type': 'application/json',
        'apikey': service_role_key
    }

    # –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ SQL –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å RPC —Ñ—É–Ω–∫—Ü–∏—é
    # –ù–æ –æ–±—ã—á–Ω–æ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ SQL Editor –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ

    print("üì° –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL —á–µ—Ä–µ–∑ API...")
    print("‚ö†Ô∏è –î–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Supabase SQL Editor")
    print(f"SQL –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:\n{sql_query}")

    return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–•–ï–ú–´ –¢–ê–ë–õ–ò–¶–´ POSTS")
    print("=" * 50)

    # SQL –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏
    sql_query = """
    -- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ channel_id –≤ —Ç–∞–±–ª–∏—Ü—É posts
    ALTER TABLE public.posts ADD COLUMN IF NOT EXISTS channel_id BIGINT;

    -- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –¥–ª—è channel_id
    CREATE INDEX IF NOT EXISTS idx_posts_channel_id ON public.posts(channel_id);
    """

    print("üìã SQL –ó–ê–ü–†–û–° –î–õ–Ø –í–´–ü–û–õ–ù–ï–ù–ò–Ø:")
    print(sql_query)

    print("\nüîß –°–ü–û–°–û–ë–´ –í–´–ü–û–õ–ù–ï–ù–ò–Ø:")
    print("1. üìù Supabase SQL Editor (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):")
    print("   - –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard")
    print("   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor")
    print("   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –≤—ã—à–µ")

    print("\n2. üìÑ –ß–µ—Ä–µ–∑ —Ñ–∞–π–ª:")
    print("   - –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ fix_posts_schema.sql")
    print("   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤ SQL Editor")

    print("\n3. üîç –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    print("   python quick_fix_posts.py")

    # –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —á–µ—Ä–µ–∑ API (–º–æ–∂–µ—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—Ç—å)
    if execute_sql_via_api(sql_query):
        print("\n‚úÖ –°—Ö–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ API!")
    else:
        print("\n‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ SQL Editor –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã")

if __name__ == "__main__":
    main()
