#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —á–∏—Å—Ç–æ–π —Å–µ—Å—Å–∏–∏
"""

import sys
import os
import logging
sys.path.append('src')

def main():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å Telegram —Å–µ—Å—Å–∏–µ–π"""

    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
    print("=" * 50)

    # –®–∞–≥ 1: –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å–µ—Å—Å–∏–π
    print("\n1Ô∏è‚É£ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å–µ—Å—Å–∏–π...")
    session_files = [
        "session_per.session",
        "session_new.session",
        "session_fresh.session",
        "session_clean.session"
    ]

    for session_file in session_files:
        if os.path.exists(session_file):
            os.remove(session_file)
            print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω: {session_file}")

    # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram...")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
    if not os.getenv("TELEGRAM_API_ID") or not os.getenv("TELEGRAM_API_HASH"):
        from dotenv import load_dotenv
        load_dotenv()

    api_id = os.getenv("TELEGRAM_API_ID")
    api_hash = os.getenv("TELEGRAM_API_HASH")

    if not api_id or not api_hash:
        print("   ‚ùå –û—à–∏–±–∫–∞: TELEGRAM_API_ID –∏–ª–∏ TELEGRAM_API_HASH –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("   üìù –î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ —Ñ–∞–π–ª .env:")
        print("   TELEGRAM_API_ID=–≤–∞—à_api_id")
        print("   TELEGRAM_API_HASH=–≤–∞—à_api_hash")
        return False

    print("   ‚úÖ API –∫–ª—é—á–∏ –Ω–∞–π–¥–µ–Ω—ã")
    print(f"   üì± API ID: {api_id}")
    print(f"   üîë API Hash: {api_hash[:10]}...")

    # –®–∞–≥ 3: –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
    print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é...")

    try:
        from src.app.telegram_client import TelegramAnalyzer

        print("   üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º TelegramAnalyzer...")
        analyzer = TelegramAnalyzer()

        print("   üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram...")
        import asyncio
        asyncio.run(analyzer.connect())

        print("   ‚úÖ –£—Å–ø–µ—à–Ω–æ! –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞")
        return True

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏: {e}")
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   ‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ API –∫–ª—é—á–∏")
        print("   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º")
        print("   ‚Ä¢ Telethon –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º —Å Python –≤–µ—Ä—Å–∏–µ–π")
        return False

    # –®–∞–≥ 4: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n4Ô∏è‚É£ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ API –∫–æ–º–∞–Ω–¥–æ–π: ./start_project.sh")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: curl http://localhost:8000/api/health")
    print("   ‚Ä¢ –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –ø—Ä–æ–±–ª–µ–º—ã - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥")

if __name__ == "__main__":
    success = main()

    if success:
        print("\nüéâ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç.")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å API –∫–ª—é—á–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é –≤–µ—Ä—Å–∏—é Python.")
