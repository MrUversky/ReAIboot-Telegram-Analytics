name: Update Documentation

on:
  push:
    paths:
      - 'src/**'
      - '!docs/**'
    branches:
      - main

  pull_request:
    paths:
      - 'src/**'
      - '!docs/**'
    branches:
      - main

jobs:
  update-docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push, not on PR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Get last two commits for diff

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            # Get files changed in the last commit
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep '^src/' | tr '\n' ' ')
            echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT
          fi

      - name: Update documentation
        if: steps.changed-files.outputs.changed_files != ''
        run: |
          python .cursorrules/update_docs.py --files ${{ steps.changed-files.outputs.changed_files }}

      - name: Validate documentation
        run: |
          python .cursorrules/check_docs.py

      - name: Commit documentation updates
        if: steps.changed-files.outputs.changed_files != ''
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Documentation Agent"
          git add docs/
          if git diff --staged --quiet; then
            echo "No documentation changes to commit"
          else
            git commit -m "docs: automatic documentation update

- Updated based on code changes in: ${{ steps.changed-files.outputs.changed_files }}
- Generated by Documentation Agent" || echo "No changes to commit"
          fi

      - name: Push documentation updates
        if: steps.changed-files.outputs.changed_files != ''
        run: |
          git push origin main

  validate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Validate documentation
        run: |
          python .cursorrules/check_docs.py
