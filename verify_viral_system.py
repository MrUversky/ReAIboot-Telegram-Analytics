#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã Viral Detection –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
sys.path.append('src')

def check_viral_system():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã Viral Detection"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò VIRAL DETECTION –°–ò–°–¢–ï–ú–´")
    print("=" * 60)

    checks_passed = 0
    total_checks = 0

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
    total_checks += 1
    try:
        from src.app.channel_baseline_analyzer import ChannelBaselineAnalyzer
        from src.app.viral_post_detector import ViralPostDetector
        from src.app.smart_top_posts_filter import SmartTopPostsFilter
        from src.app.supabase_client import SupabaseManager
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")
        checks_passed += 1
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
    total_checks += 1
    try:
        supabase = SupabaseManager()
        if supabase.client:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ")
            checks_passed += 1
        else:
            print("‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase –Ω–µ —É–¥–∞–ª–æ—Å—å")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: {e}")
        return False

    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
    total_checks += 1
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º system_settings
        settings = supabase.get_system_setting('viral_weights')
        if settings:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ system_settings —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ")
            checks_passed += 1
        else:
            print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ system_settings —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
            print("   –í—ã–ø–æ–ª–Ω–∏—Ç–µ safe_schema_update.sql –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã system_settings: {e}")

    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã posts
    total_checks += 1
    try:
        # –ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∫ posts —Å –Ω–æ–≤—ã–º–∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏
        result = supabase.client.table('posts').select(
            'id, viral_score, engagement_rate, zscore'
        ).limit(1).execute()

        if result.data is not None:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ posts —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è viral detection")
            checks_passed += 1
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ posts –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã posts: {e}")
        print("   –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å safe_schema_update.sql")

    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–æ–≤
    total_checks += 1
    try:
        baseline_analyzer = ChannelBaselineAnalyzer(supabase)
        viral_detector = ViralPostDetector(baseline_analyzer)
        smart_filter = SmartTopPostsFilter(supabase)
        print("‚úÖ –í—Å–µ –∫–ª–∞—Å—Å—ã —Å–∏—Å—Ç–µ–º—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        checks_passed += 1
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–æ–≤: {e}")

    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    total_checks += 1
    try:
        weights = baseline_analyzer.settings.get('viral_weights')
        thresholds = viral_detector.settings

        if weights and thresholds:
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print(f"   –í–µ—Å–∞: forward={weights['forward_rate']}, reaction={weights['reaction_rate']}, reply={weights['reply_rate']}")
            print(f"   –ü–æ—Ä–æ–≥ viral_score: {thresholds['min_viral_score']}")
            checks_passed += 1
        else:
            print("‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–µ–ø–æ–ª–Ω—ã–µ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")

    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "=" * 60)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò: {checks_passed}/{total_checks} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")

    if checks_passed == total_checks:
        print("üéâ –°–ò–°–¢–ï–ú–ê VIRAL DETECTION –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
        print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ API —Å–µ—Ä–≤–µ—Ä: python run_api.py")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ 'Viral Detection'")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–∏–Ω–≥ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –±–∞–∑–æ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫")
        return True
    else:
        print("‚ö†Ô∏è –°–ò–°–¢–ï–ú–ê –ù–£–ñ–î–ê–ï–¢–°–Ø –í –î–û–ù–ê–°–¢–†–û–ô–ö–ï")
        print("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        if checks_passed < total_checks * 0.8:
            print("- –í—ã–ø–æ–ª–Ω–∏—Ç–µ safe_schema_update.sql –≤ Supabase SQL Editor")
        print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return False

if __name__ == "__main__":
    success = check_viral_system()
    sys.exit(0 if success else 1)
