#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Telegram —Å–µ—Å—Å–∏–∏
"""

import sys
import asyncio
sys.path.append('src')

async def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    print("üîç –ë–´–°–¢–†–´–ô –¢–ï–°–¢ TELEGRAM –°–ï–°–°–ò–ò")
    print("=" * 40)

    try:
        from src.app.telegram_client import TelegramAnalyzer

        print("üì± –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
        analyzer = TelegramAnalyzer()

        if not analyzer.client:
            print("‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return False

        # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        try:
            await analyzer.client.connect()
            connected = analyzer.client.is_connected()

            if connected:
                print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å–ø–µ—à–Ω–æ")
                print("–°–µ—Å—Å–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
                await analyzer.client.disconnect()
                return True
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")
                print("–í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
                return False

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            if "database is locked" in str(e):
                print("üìù –°–µ—Å—Å–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ - –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é")
                print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python setup_telegram_session.py")
            return False

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(quick_test())
    sys.exit(0 if success else 1)
