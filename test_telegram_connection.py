#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API.
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent / "src"))

from src.app.telegram_client import TelegramAnalyzer
from src.app.settings import settings

async def test_telegram_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram."""

    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API")
    print("=" * 50)

    try:
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
        analyzer = TelegramAnalyzer()
        print("‚úÖ TelegramAnalyzer —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏—é
        session_file = analyzer.client.session.filename
        print(f"üìÅ –§–∞–π–ª —Å–µ—Å—Å–∏–∏: {session_file}")

        import os
        if os.path.exists(session_file):
            print("‚úÖ –§–∞–π–ª —Å–µ—Å—Å–∏–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ùå –§–∞–π–ª —Å–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")

        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
        print("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
        await analyzer.connect()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        me = await analyzer.client.get_me()
        print(f"üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {me.first_name} (@{me.username})")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–∞ @dnevteh...")
        channel_info = await analyzer.get_channel_info("@dnevteh")
        if "error" in channel_info:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {channel_info['error']}")
        else:
            print(f"‚úÖ –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: {channel_info.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
            print(f"üìä –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {channel_info.get('participants_count', 0)}")

        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç—ã –∑–∞ —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
        print("üìÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å...")
        messages, _ = await analyzer.get_messages("@dnevteh", days=1, limit=3)
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ –∑–∞ 1 –¥–µ–Ω—å: {len(messages)}")

        if messages:
            for i, msg in enumerate(messages[:3]):
                print(f"  {i+1}. {msg.get('text_preview', '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞')[:100]}...")
        else:
            print("üìÑ –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π...")
            messages, _ = await analyzer.get_messages("@dnevteh", days=7, limit=3)
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ –∑–∞ 7 –¥–Ω–µ–π: {len(messages)}")

            if messages:
                for i, msg in enumerate(messages[:3]):
                    print(f"  {i+1}. {msg.get('text_preview', '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞')[:100]}...")
            else:
                print("üìÑ –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π...")
                messages, _ = await analyzer.get_messages("@dnevteh", days=30, limit=3)
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ –∑–∞ 30 –¥–Ω–µ–π: {len(messages)}")

                if messages:
                    for i, msg in enumerate(messages[:3]):
                        print(f"  {i+1}. {msg.get('text_preview', '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞')[:100]}...")
                else:
                    print("‚ùå –ü–æ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–∂–µ –∑–∞ 30 –¥–Ω–µ–π")

        await analyzer.disconnect()
        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_telegram_connection())
