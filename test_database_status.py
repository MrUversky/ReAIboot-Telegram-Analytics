#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
"""

import sys
import os
import time
sys.path.append('src')

from src.app.supabase_client import SupabaseManager
from src.app.settings import settings

def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 50)

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase –∫–ª–∏–µ–Ω—Ç–∞
        print("üì° –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...")
        supabase = SupabaseManager()

        if not supabase.client:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Supabase –∫–ª–∏–µ–Ω—Ç")
            return False

        print("‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        print("üìä –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...")
        result = supabase.client.table('posts').select('count', count='exact').limit(1).execute()
        print(f"‚úÖ –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω: –Ω–∞–π–¥–µ–Ω–æ {result.count} –∑–∞–ø–∏—Å–µ–π")

        # –¢–µ—Å—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
        tables_to_check = ['posts', 'channels', 'profiles', 'parsing_sessions']

        for table in tables_to_check:
            try:
                result = supabase.client.table(table).select('*').limit(1).execute()
                print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ '{table}' –¥–æ—Å—Ç—É–ø–Ω–∞")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ '{table}': {e}")

        # –¢–µ—Å—Ç –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü –¥–ª—è Viral Detection
        viral_tables = ['system_settings', 'channel_baselines']

        for table in viral_tables:
            try:
                result = supabase.client.table(table).select('*').limit(1).execute()
                print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ Viral Detection '{table}' –¥–æ—Å—Ç—É–ø–Ω–∞")
            except Exception as e:
                print(f"‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ Viral Detection '{table}' –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")
                print("   –ù—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å safe_schema_update.sql")

        # –¢–µ—Å—Ç –Ω–æ–≤—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ posts
        print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ posts...")
        columns_to_check = ['viral_score', 'engagement_rate', 'zscore', 'median_multiplier', 'last_viral_calculation']

        try:
            # –ü—Ä–æ–±—É–µ–º –∑–∞–ø—Ä–æ—Å–∏—Ç—å –æ–¥–Ω—É –∑–∞–ø–∏—Å—å —Å –Ω–æ–≤—ã–º–∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏
            result = supabase.client.table('posts').select(
                'id, ' + ', '.join(columns_to_check)
            ).limit(1).execute()

            if result.data:
                available_columns = [col for col in columns_to_check if col in result.data[0]]
                missing_columns = [col for col in columns_to_check if col not in result.data[0]]

                if available_columns:
                    print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã –∫–æ–ª–æ–Ω–∫–∏: {', '.join(available_columns)}")
                if missing_columns:
                    print(f"‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–ª–æ–Ω–∫–∏: {', '.join(missing_columns)}")
                    print("   –ù—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å safe_schema_update.sql")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ posts –ø—É—Å—Ç–∞ –∏–ª–∏ –∫–æ–ª–æ–Ω–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ posts: {e}")

        return True

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return False

def test_database_performance():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\n‚ö° –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)

    try:
        supabase = SupabaseManager()

        # –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞
        start_time = time.time()
        result = supabase.client.table('posts').select('*').limit(100).execute()
        query_time = time.time() - start_time

        print(f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {query_time:.2f} —Å–µ–∫")
        # –¢–µ—Å—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π
        count_result = supabase.client.table('posts').select('count', count='exact').execute()
        print(f"üìä –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤ –≤ –±–∞–∑–µ: {count_result.count}")

        # –¢–µ—Å—Ç –∏–Ω–¥–µ–∫—Å–æ–≤ (–ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤...")
        # –≠—Ç–æ –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–ê–ü–£–°–ö –ö–û–ú–ü–õ–ï–ö–°–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•\n")

    success = True

    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if not test_database_connection():
        success = False

    # –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if not test_database_performance():
        success = False

    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 60)
    if success:
        print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–• –ü–†–û–®–õ–û –£–°–ü–ï–®–ù–û!")
        print("\n‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("- –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä—Å–∏–Ω–≥")
    else:
        print("‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•!")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
        print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase")
        print("- –í—ã–ø–æ–ª–Ω–∏—Ç–µ safe_schema_update.sql –¥–ª—è Viral Detection")
        print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å Supabase –ø—Ä–æ–µ–∫—Ç–∞")

    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
